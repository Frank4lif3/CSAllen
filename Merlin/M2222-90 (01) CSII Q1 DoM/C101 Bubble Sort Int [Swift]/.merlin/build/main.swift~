

// ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩
// DO NOT ALTER THE TEXT BETWEEN THESE LINES =========={M{E{R{L{I{N{1}N}I}L}R}E}M}=====================================
let unsortedIntegers = [5, 1, 4, 2, 8]
// DO NOT ALTER THE TEXT BETWEEN THESE LINES =========={M{E{R{L{I{N{1}N}I}L}R}E}M}=====================================
// ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧


// Add your code below:

var array = unsortedIntegers

func swap(array:inout[Int], fI:Int, sI:Int) {
    let s = array[sI]

    array.remove(at:sI)
    array.insert(array[fI], at:sI)
    array.remove(at:fI)
    array.insert(s, at:fI)
}

var tSwap = 0
var pass  = 0
var swaps = 0
print("Pass: \(pass), Swaps: \(0)/\(tSwap), Array:\(array)")

repeat {
    swaps = 0
    pass += 1
    for index in 0 ..< array.count - 1 {
        if array[index] > array[index+1] {
            swap(array:&array, fI:index, sI:index)
            swaps+=1
            tSwap+=1
        }
        
    }
    print("Pass: \(pass), Swaps: \(swaps)/\(tSwap), Array:\(array)")
} while pass < array.count - 1
